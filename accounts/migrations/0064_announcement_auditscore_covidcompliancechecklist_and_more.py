# Generated by Django 4.0.4 on 2022-06-19 20:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0063_job_update_complete_job_update_start_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('announcement_title', models.CharField(max_length=200, null=True)),
                ('announcement_text', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AuditScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('score', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CovidComplianceChecklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measures_item', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CovidReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_number', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('score', models.IntegerField()),
                ('compliance', models.ManyToManyField(to='accounts.covidcompliancechecklist')),
            ],
        ),
        migrations.CreateModel(
            name='FBChecklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FBReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_number', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('score', models.IntegerField()),
                ('compliance', models.ManyToManyField(to='accounts.fbchecklist')),
            ],
        ),
        migrations.CreateModel(
            name='NonFBChecklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checklist_item', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NonFBReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_number', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('score', models.IntegerField()),
                ('compliance', models.ManyToManyField(to='accounts.nonfbchecklist')),
            ],
        ),
        migrations.CreateModel(
            name='Send_email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Statistics_page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistics_name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_name', models.CharField(max_length=200, null=True)),
                ('system_id', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
                ('jobPriority', models.BooleanField(null=True)),
                ('category', models.CharField(choices=[('FB', 'FB'), ('Non-FB', 'Non-FB')], max_length=200, null=True)),
                ('job_description', models.CharField(blank=True, max_length=200, null=True)),
                ('score', models.CharField(blank=True, max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('audit_date', models.DateField(null=True, verbose_name='dd/mm/yyyy')),
                ('tags', models.ManyToManyField(blank=True, to='accounts.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('Notification Sent', 'Notification Sent'), ('Pending', 'Pending'), ('Completed', 'Completed')], max_length=200, null=True)),
                ('upload_image', models.FileField(upload_to='uploads/')),
                ('Covid_Compliance_Report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.covidreport')),
                ('FB_Report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.fbreport')),
                ('Non_FB_Report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.nonfbreport')),
                ('covid_compliance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.covidcompliancechecklist')),
                ('issue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.nonfbchecklist')),
                ('store', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.store')),
            ],
        ),
        migrations.AddField(
            model_name='nonfbreport',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.store'),
        ),
        migrations.AddField(
            model_name='nonfbchecklist',
            name='tags',
            field=models.ManyToManyField(blank=True, to='accounts.tag'),
        ),
        migrations.AddField(
            model_name='fbreport',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.store'),
        ),
        migrations.AddField(
            model_name='fbchecklist',
            name='tags',
            field=models.ManyToManyField(blank=True, to='accounts.tag'),
        ),
        migrations.AddField(
            model_name='covidreport',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.store'),
        ),
        migrations.AddField(
            model_name='covidcompliancechecklist',
            name='tags',
            field=models.ManyToManyField(blank=True, to='accounts.tag'),
        ),
    ]
