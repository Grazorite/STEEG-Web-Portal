# Generated by Django 3.2.13 on 2022-06-21 06:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Jobupdatecomplete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_update_id', models.SmallIntegerField(blank=True, null=True)),
                ('mal_end_date', models.DateField(blank=True, null=True)),
                ('job_complete_input', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'jobUpdateComplete',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Jobupdatestart',
            fields=[
                ('job_update_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('cause_of_delay', models.CharField(max_length=50)),
                ('start_date_actual', models.DateField()),
                ('start_date_input', models.DateField()),
            ],
            options={
                'db_table': 'jobUpdateStart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MainDB',
            fields=[
                ('service_ord', models.BigIntegerField(db_column='SERVICE_ORD', primary_key=True, serialize=False)),
                ('service_order_user_status', models.CharField(blank=True, db_column='SERVICE_ORDER_USER_STATUS', max_length=50, null=True)),
                ('notification_user_status', models.CharField(blank=True, db_column='NOTIFICATION_USER_STATUS', max_length=50, null=True)),
                ('priority', models.CharField(blank=True, db_column='Priority', max_length=50, null=True)),
                ('mat', models.CharField(blank=True, db_column='MAT', max_length=50, null=True)),
                ('customer_po_number', models.BigIntegerField(blank=True, db_column='CUSTOMER_PO_NUMBER', null=True)),
                ('initial_po_number', models.CharField(blank=True, db_column='Initial_PO_Number', max_length=50, null=True)),
                ('mo_number', models.BigIntegerField(blank=True, db_column='MO_NUMBER', null=True)),
                ('equipment_description', models.CharField(blank=True, db_column='EQUIPMENT_DESCRIPTION', max_length=50, null=True)),
                ('model_number', models.FloatField(blank=True, db_column='MODEL_NUMBER', null=True)),
                ('date_in', models.DateField(blank=True, db_column='DATE_IN', null=True)),
                ('required_start_date', models.DateField(blank=True, db_column='Required_Start_Date', null=True)),
                ('required_end_date', models.DateField(blank=True, db_column='Required_End_Date', null=True)),
                ('reported_fault_long_text', models.TextField(blank=True, db_column='Reported_Fault_Long_Text', null=True)),
                ('capacity_hour', models.FloatField(blank=True, db_column='CAPACITY_HOUR', null=True)),
                ('enduser', models.CharField(blank=True, db_column='ENDUSER', max_length=50, null=True)),
                ('main_work_center', models.CharField(blank=True, db_column='MAIN_WORK_CENTER', max_length=50, null=True)),
                ('ctat', models.SmallIntegerField(blank=True, db_column='CTAT', null=True)),
                ('calculated_ctat', models.CharField(blank=True, db_column='Calculated_CTAT', max_length=50, null=True)),
            ],
            options={
                'db_table': 'MainTable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('announcement_title', models.CharField(max_length=200, null=True)),
                ('announcement_text', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AuditScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('score', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CovidComplianceChecklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measures_item', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CovidReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_number', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('score', models.IntegerField()),
                ('compliance', models.ManyToManyField(to='accounts.CovidComplianceChecklist')),
            ],
        ),
        migrations.CreateModel(
            name='FBChecklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FBReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_number', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('score', models.IntegerField()),
                ('compliance', models.ManyToManyField(to='accounts.FBChecklist')),
            ],
        ),
        migrations.CreateModel(
            name='NonFBChecklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checklist_item', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NonFBReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_number', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('score', models.IntegerField()),
                ('compliance', models.ManyToManyField(to='accounts.NonFBChecklist')),
            ],
        ),
        migrations.CreateModel(
            name='Send_email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Statistics_page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistics_name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='steeg_user',
            fields=[
                ('employment_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=200, null=True)),
                ('contact_number', models.CharField(max_length=200, null=True)),
                ('stakeholder_type', models.CharField(choices=[('RSAF', 'RSAF'), ('DSTA', 'DSTA'), ('Workshop Manager', 'Workshop Manager'), ('Workshop Engineer', 'Workshop Engineer')], max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Jobupdateend',
            fields=[
                ('job_update', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='accounts.jobupdatestart')),
                ('end_date_actual', models.DateField()),
                ('end_date_input', models.DateField()),
            ],
            options={
                'db_table': 'jobUpdateEnd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_name', models.CharField(max_length=200, null=True)),
                ('system_id', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
                ('jobPriority', models.BooleanField(null=True)),
                ('category', models.CharField(choices=[('FB', 'FB'), ('Non-FB', 'Non-FB')], max_length=200, null=True)),
                ('job_description', models.CharField(blank=True, max_length=200, null=True)),
                ('score', models.CharField(blank=True, max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('audit_date', models.DateField(null=True, verbose_name='dd/mm/yyyy')),
                ('tags', models.ManyToManyField(blank=True, to='accounts.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('Notification Sent', 'Notification Sent'), ('Pending', 'Pending'), ('Completed', 'Completed')], max_length=200, null=True)),
                ('upload_image', models.FileField(upload_to='uploads/')),
                ('Covid_Compliance_Report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.covidreport')),
                ('FB_Report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.fbreport')),
                ('Non_FB_Report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.nonfbreport')),
                ('covid_compliance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.covidcompliancechecklist')),
                ('issue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.nonfbchecklist')),
                ('store', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.store')),
            ],
        ),
        migrations.AddField(
            model_name='nonfbreport',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.store'),
        ),
        migrations.AddField(
            model_name='nonfbchecklist',
            name='tags',
            field=models.ManyToManyField(blank=True, to='accounts.Tag'),
        ),
        migrations.AddField(
            model_name='fbreport',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.store'),
        ),
        migrations.AddField(
            model_name='fbchecklist',
            name='tags',
            field=models.ManyToManyField(blank=True, to='accounts.Tag'),
        ),
        migrations.CreateModel(
            name='equipment_inventory',
            fields=[
                ('serial_number', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('system_type', models.CharField(max_length=200, null=True)),
                ('service_order_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.maindb')),
            ],
        ),
        migrations.CreateModel(
            name='discrepancy_report',
            fields=[
                ('discrepancy_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('cause_of_delay', models.CharField(choices=[('Parts Missing', 'Parts Missing'), ('Equipment Faulty', 'Equipment Faulty'), ('To be assessed for OEM repair', 'To be assessed for OEM repair'), ('Pending further evaluation', 'Pending further evaluation'), ('Priority given to others', 'Priority given to others')], max_length=200, null=True)),
                ('discrepancy_creation_date', models.DateField(null=True)),
                ('expected_delay_duration', models.IntegerField()),
                ('service_ord', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.maindb')),
            ],
        ),
        migrations.AddField(
            model_name='covidreport',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.store'),
        ),
        migrations.AddField(
            model_name='covidcompliancechecklist',
            name='tags',
            field=models.ManyToManyField(blank=True, to='accounts.Tag'),
        ),
        migrations.CreateModel(
            name='approval_for_work',
            fields=[
                ('AFW_id', models.IntegerField(primary_key=True, serialize=False)),
                ('approval_creation_date', models.DateField(null=True)),
                ('AFW_status', models.BooleanField(null=True)),
                ('discrepancy_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.discrepancy_report')),
                ('employment_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.steeg_user')),
                ('service_ord', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.maindb')),
            ],
        ),
    ]
